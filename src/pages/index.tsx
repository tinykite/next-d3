import Head from 'next/head'
import * as d3 from "d3"
import Timeline from '@/components/Timeline';
import ScatterPlot from '@/components/ScatterPlot';
import Histogram from '@/components/Histogram';
import type { temperatureData, scatterData } from '@/lib/chart';

const parseDate = d3.timeParse("%m/%d/%Y")
const dateAccessor = (d: temperatureData) => parseDate(d.date)
// TODO: Write a better type generic
const temperatureAccessor = (d: scatterData | temperatureData) => d.temperature
const humidityAccessor = (d: scatterData) => d.humidity

interface indexPageProps {
  scatterData: Array<scatterData>
  temperatureData: Array<temperatureData>
}

export default function Index(props: indexPageProps) {
  const {scatterData, temperatureData} = props
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>Weather Dashboard</h1>
      <Timeline 
          data={temperatureData}
          xAccessor={dateAccessor}
          yAccessor={temperatureAccessor}
          label="Temperature"/>
                <ScatterPlot
          data={scatterData}
          xAccessor={humidityAccessor}
          yAccessor={temperatureAccessor}
          xLabel="Humidity"
          yLabel="Temperature"
        />
      <Histogram
          data={scatterData}
          xAccessor={humidityAccessor}
          label="Humidity"
        />
    <main>
    </main>
    </>
  )
}

// This function gets called at build time on server-side.
// It won't be called on client-side, so you can even do
// direct database queries.
export async function getStaticProps() {
  const tempRes = await fetch('http://localhost:3000/api/timelineData')
  const temperatureData = await tempRes.json()

  const scatterRes = await fetch('http://localhost:3000/api/scatterData')
  const scatterData = await scatterRes.json()
 
  return {
    props: {
        temperatureData,
        scatterData
    },
  }
}